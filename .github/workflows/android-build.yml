name: Build Android (auto-create app if missing)

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PROJECT_ROOT: Titan
      APP_MODULE: app
      GRADLE_VERSION: "8.7"
      AGP_VERSION: "8.5.2"
      KOTLIN_VERSION: "1.9.24"
      COMPILE_SDK: "34"
      MIN_SDK: "24"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK components
        shell: bash
        run: |
          sdkmanager "platforms;android-${COMPILE_SDK}" "build-tools;${COMPILE_SDK}.0.0"

      - name: Unzip TitanApp_Rebuild.zip (if present)
        shell: bash
        run: |
          set -euo pipefail
          if [ -f TitanApp_Rebuild.zip ]; then
            echo "Found TitanApp_Rebuild.zip - extracting into ./"
            unzip -o TitanApp_Rebuild.zip -d .
          else
            echo "No TitanApp_Rebuild.zip found - skipping."
          fi

      - name: Ensure Gradle project exists (auto-generate tiny app if needed)
        shell: bash
        run: |
          set -euo pipefail

          ROOT="${PROJECT_ROOT}"
          APP="${APP_MODULE}"

          if [ -d "$ROOT/$APP" ] && [ -f "$ROOT/settings.gradle.kts" ]; then
            echo "Gradle project already exists at $ROOT"
            exit 0
          fi

          echo "No Gradle project found. Creating a minimal Android app under $ROOT/$APP ..."

          mkdir -p "$ROOT/$APP/src/main/java/com/example/helloworld"
          mkdir -p "$ROOT/$APP/src/main/res/layout"
          mkdir -p "$ROOT/$APP/src/main/res/values"

          cat > "$ROOT/settings.gradle.kts" <<'EOF'
          pluginManagement {
            repositories {
              gradlePluginPortal()
              google()
              mavenCentral()
            }
          }
          dependencyResolutionManagement {
            repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
            repositories {
              google()
              mavenCentral()
            }
          }
          rootProject.name = "Titan"
          include(":app")
          EOF

          echo "// root build kept minimal" > "$ROOT/build.gradle.kts"

          cat > "$ROOT/$APP/build.gradle.kts" <<EOF
          plugins {
              id("com.android.application") version "${AGP_VERSION}"
              id("org.jetbrains.kotlin.android") version "${KOTLIN_VERSION}"
          }

          android {
              namespace = "com.example.helloworld"
              compileSdk = ${COMPILE_SDK}.toInt()

              defaultConfig {
                  applicationId = "com.example.helloworld"
                  minSdk = ${MIN_SDK}.toInt()
                  targetSdk = ${COMPILE_SDK}.toInt()
                  versionCode = 1
                  versionName = "1.0"
              }

              buildTypes {
                  release {
                      isMinifyEnabled = false
                      proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
                  }
              }

              compileOptions {
                  sourceCompatibility = JavaVersion.VERSION_17
                  targetCompatibility = JavaVersion.VERSION_17
              }
              kotlinOptions {
                  jvmTarget = "17"
              }
          }

          dependencies {
              implementation("androidx.core:core-ktx:1.13.1")
              implementation("androidx.appcompat:appcompat:1.7.0")
              implementation("com.google.android.material:material:1.12.0")
              implementation("androidx.activity:activity-ktx:1.9.2")
              implementation("androidx.constraintlayout:constraintlayout:2.1.4")
          }
          EOF

          cat > "$ROOT/$APP/src/main/AndroidManifest.xml" <<'EOF'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
            <application
                android:label="Titan"
                android:theme="@style/Theme.MaterialComponents.DayNight.NoActionBar">
              <activity android:name=".MainActivity">
                <intent-filter>
                  <action android:name="android.intent.action.MAIN"/>
                  <category android:name="android.intent.category.LAUNCHER"/>
                </intent-filter>
              </activity>
            </application>
          </manifest>
          EOF

          cat > "$ROOT/$APP/src/main/java/com/example/helloworld/MainActivity.kt" <<'EOF'
          package com.example.helloworld

          import android.os.Bundle
          import androidx.appcompat.app.AppCompatActivity
          import android.widget.TextView

          class MainActivity : AppCompatActivity() {
              override fun onCreate(savedInstanceState: Bundle?) {
                  super.onCreate(savedInstanceState)
                  val tv = TextView(this).apply { text = "Hello Titan!" }
                  setContentView(tv)
              }
          }
          EOF

          cat > "$ROOT/$APP/src/main/res/layout/activity_main.xml" <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="match_parent"
              android:layout_height="match_parent">
              <TextView
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:text="Hello Titan!"
                  android:layout_gravity="center"/>
          </FrameLayout>
          EOF

          cat > "$ROOT/$APP/src/main/res/values/strings.xml" <<'EOF'
          <resources>
              <string name="app_name">Titan</string>
          </resources>
          EOF

          mkdir -p "$ROOT/gradle/wrapper"
          cat > "$ROOT/gradle/wrapper/gradle-wrapper.properties" <<EOF
          distributionBase=GRADLE_USER_HOME
          distributionPath=wrapper/dists
          distributionUrl=https\://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip
          zipStoreBase=GRADLE_USER_HOME
          zipStorePath=wrapper/dists
          EOF

          mkdir -p "$HOME/gradle"
          curl -sL "https://services.gradle.org/distributions/
