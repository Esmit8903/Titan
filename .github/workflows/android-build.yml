name: Build Android (Titan subdir)

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PROJECT_ROOT: Titan
      APP_MODULE: app

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java 17 (with Gradle caching)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle
          # Point cache scanning at the Titan/ subfolder so it wonâ€™t error
          cache-dependency-path: |
            Titan/**/build.gradle
            Titan/**/build.gradle.kts
            Titan/**/settings.gradle
            Titan/**/settings.gradle.kts
            Titan/**/gradle-wrapper.properties

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK components
        run: sdkmanager "platforms;android-34" "build-tools;34.0.0"

      - name: Make gradlew executable if present
        working-directory: ${{ env.PROJECT_ROOT }}
        run: |
          if [ -f ./gradlew ]; then chmod +x ./gradlew; fi

      - name: Pick Gradle (wrapper or 8.7)
        id: gradle
        shell: bash
        run: |
          set -e
          cd "${PROJECT_ROOT}"
          if [ -f ./gradlew ]; then
            echo "GRADLE_CMD=./gradlew" >> "$GITHUB_OUTPUT"
          else
            cd ~
            curl -L -o gradle.zip https://services.gradle.org/distributions/gradle-8.7-bin.zip
            unzip -q gradle.zip
            echo "$HOME/gradle-8.7/bin" >> "$GITHUB_PATH"
            echo "GRADLE_CMD=gradle" >> "$GITHUB_OUTPUT"
          fi

      - name: Build Debug APK (capture full log)
        shell: bash
        run: |
          set -e
          CMD="${{ steps.gradle.outputs.GRADLE_CMD }}"
          "$CMD" -p "${PROJECT_ROOT}" --no-daemon :${APP_MODULE}:assembleDebug --stacktrace --info

      - name: Debug: print project structure on failure
        if: failure()
        shell: bash
        run: |
          echo "== Gradle files =="
          find "${PROJECT_ROOT}" -maxdepth 2 \( -name "build.gradle" -o -name "build.gradle.kts" -o -name "settings.gradle" -o -name "settings.gradle.kts" \) -print
          echo "== App directory listing =="
          ls -la "${PROJECT_ROOT}/${APP_MODULE}" || true
          echo "== APK output listing =="
          ls -la "${PROJECT_ROOT}/${APP_MODULE}/build/outputs/apk/debug" || true

      - name: Upload APK artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: titan-debug-apk
          path: |
            ${{ env.PROJECT_ROOT }}/${{ env.APP_MODULE }}/build/outputs/apk/debug/*.apk
          if-no-files-found: warn
