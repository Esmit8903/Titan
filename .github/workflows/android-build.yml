name: Build Android (auto-create app if missing)

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PROJECT_ROOT: Titan
      APP_MODULE: app

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK components
        run: sdkmanager "platforms;android-34" "build-tools;34.0.0"

      # ---------------- Optional skeleton unzip ----------------
      - name: Unzip TitanApp_Rebuild.zip (if present)
        shell: bash
        run: |
          set -euo pipefail
          if [ -f TitanApp_Rebuild.zip ]; then
            echo "Found TitanApp_Rebuild.zip — extracting into ./Titan ..."
            unzip -o TitanApp_Rebuild.zip -d Titan
          else
            echo "No TitanApp_Rebuild.zip found — skipping."
          fi

      # --------- Auto-create a tiny app if none exists ----------
      - name: Ensure Gradle project exists (auto-generate tiny app if needed)
        shell: bash
        run: |
          set -euo pipefail

          ROOT="${PROJECT_ROOT}"
          APP="${APP_MODULE}"

          # Already a Gradle project?
          if [ -d "$ROOT/$APP" ] && [ -f "$ROOT/settings.gradle" -o -f "$ROOT/settings.gradle.kts" ]; then
            echo "Gradle project already exists at $ROOT."
            exit 0
          fi

          echo "No Gradle project found — creating a minimal Kotlin Android app under $ROOT/$APP ..."

          mkdir -p "$ROOT/$APP/src/main/java/com/example/helloworld"
          mkdir -p "$ROOT/$APP/src/main/res"
          mkdir -p "$ROOT/$APP/src/main"

          # ---------------- settings.gradle.kts ----------------
          cat <<'EOF' > "$ROOT/settings.gradle.kts"
          pluginManagement {
            repositories {
              google()
              mavenCentral()
              gradlePluginPortal()
            }
          }
          dependencyResolutionManagement {
            repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
            repositories {
              google()
              mavenCentral()
            }
          }
          rootProject.name = "Titan"
          include(":app")
          EOF

          # ---------------- root build.gradle.kts ----------------
          cat <<'EOF' > "$ROOT/build.gradle.kts"
          // Root build file can be minimal for AGP 8+
          plugins { }
          EOF

          # ---------------- app/build.gradle.kts ----------------
          cat <<'EOF' > "$ROOT/$APP/build.gradle.kts"
          plugins {
            id("com.android.application")
            id("org.jetbrains.kotlin.android")
          }

          android {
            namespace = "com.example.helloworld"
            compileSdk = 34

            defaultConfig {
              applicationId = "com.example.helloworld"
              minSdk = 24
              targetSdk = 34
              versionCode = 1
              versionName = "1.0"
            }

            buildTypes {
              release {
                isMinifyEnabled = false
                proguardFiles(
                  getDefaultProguardFile("proguard-android-optimize.txt"),
                  "proguard-rules.pro"
                )
              }
            }
          }

          dependencies {
            implementation("org.jetbrains.kotlin:kotlin-stdlib:1.9.24")
            implementation("androidx.core:core-ktx:1.13.1")
            implementation("androidx.appcompat:appcompat:1.7.0")
            implementation("com.google.android.material:material:1.12.0")
          }
          EOF

          # ---------------- AndroidManifest.xml ----------------
          mkdir -p "$ROOT/$APP/src/main"
          cat <<'EOF' > "$ROOT/$APP/src/main/AndroidManifest.xml"
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
              package="com.example.helloworld">
            <application
                android:label="Titan"
                android:icon="@mipmap/ic_launcher"
                android:allowBackup="true"
                android:supportsRtl="true">
              <activity android:name=".MainActivity">
                <intent-filter>
                  <action android:name="android.intent.action.MAIN" />
                  <category android:name="android.intent.category.LAUNCHER" />
                </intent-filter>
              </activity>
            </application>
          </manifest>
          EOF

          # ---------------- MainActivity.kt ----------------
          cat <<'EOF' > "$ROOT/$APP/src/main/java/com/example/helloworld/MainActivity.kt"
          package com.example.helloworld

          import android.os.Bundle
          import android.widget.TextView
          import androidx.activity.Component
