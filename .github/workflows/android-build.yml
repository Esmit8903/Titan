name: Build Android (auto-detect)

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK components
        shell: bash
        run: sdkmanager "platforms;android-34" "build-tools;34.0.0"

      - name: Detect project root & app module
        id: detect
        shell: bash
        run: |
          set -euo pipefail

          # 1) Project root: prefer "Titan/" if it exists, otherwise "."
          ROOT="."
          if [ -d "Titan" ]; then ROOT="Titan"; fi

          # 2) App module: find a module that applies the Android application plugin
          #    Look for build.gradle / build.gradle.kts containing the plugin id.
          APP_MOD="$(grep -RIlE "com\.android\.application" "$ROOT" \
                    --include="build.gradle" --include="build.gradle.kts" \
                    | head -n1 | sed -E "s|/build\.gradle(\.kts)?$||" | sed -E "s|^$ROOT/||")"

          # Fallback to "app" if that folder exists
          if [ -z "${APP_MOD:-}" ] && [ -d "$ROOT/app" ]; then
            APP_MOD="app"
          fi

          echo "Detected ROOT='$ROOT'"
          echo "Detected APP_MOD='${APP_MOD:-<none>}'"

          echo "ROOT=$ROOT" >> "$GITHUB_OUTPUT"
          echo "APP_MOD=${APP_MOD}" >> "$GITHUB_OUTPUT"

          echo "== quick tree =="
          find "$ROOT" -maxdepth 3 -type f \
            \( -name "settings.gradle" -o -name "settings.gradle.kts" -o \
               -name "build.gradle"   -o -name "build.gradle.kts"   -o \
               -name "AndroidManifest.xml" \) -print | sed 's/^/  /'

          if [ -z "${APP_MOD:-}" ]; then
            echo "::warning::Could not detect an Android application module automatically."
          fi

      - name: Make gradlew executable (if present)
        shell: bash
        run: |
          set -e
          cd "${{ steps.detect.outputs.ROOT }}"
          if [ -f ./gradlew ]; then chmod +x ./gradlew; fi

      - name: Pick Gradle (wrapper or 8.7)
        id: gradle
        shell: bash
        run: |
          set -e
          cd "${{ steps.detect.outputs.ROOT }}"
          if [ -f ./gradlew ]; then
            echo "GRADLE_CMD=./gradlew" >> "$GITHUB_OUTPUT"
          else
            cd ..
            curl -L -o gradle.zip https://services.gradle.org/distributions/gradle-8.7-bin.zip
            unzip -q gradle.zip -d "$HOME/gradle"
            echo "$HOME/gradle/gradle-8.7/bin" >> "$GITHUB_PATH"
            echo "GRADLE_CMD=gradle" >> "$GITHUB_OUTPUT"
          fi

      - name: Build Debug APK (capture full log)
        if: ${{ steps.detect.outputs.APP_MOD != '' }}
        shell: bash
        run: |
          set -e
          cd "${{ steps.detect.outputs.ROOT }}"
          "${{ steps.gradle.outputs.GRADLE_CMD }}" --no-daemon \
            ":${{ steps.detect.outputs.APP_MOD }}:assembleDebug" \
            --stacktrace --info

      - name: "Debug: print project structure on failure"
        if: ${{ failure() }}
        shell: bash
        run: |
          echo "== Gradle files =="
          find "${{ steps.detect.outputs.ROOT }}" -maxdepth 2 \
            \( -name "build.gradle" -o -name "build.gradle.kts" -o \
               -name "settings.gradle" -o -name "settings.gradle.kts" \) -print

          echo "== App directory listing =="
          ls -la "${{ steps.detect.outputs.ROOT }}/${{ steps.detect.outputs.APP_MOD }}" || true

          echo "== APK output listing =="
          ls -la "${{ steps.detect.outputs.ROOT }}/${{ steps.detect.outputs.APP_MOD }}/build/outputs/apk/debug" || true

      - name: Upload APK artifact
        if: always() && steps.detect.outputs.APP_MOD != ''
        uses: actions/upload-artifact@v4
        with:
          name: titan-debug-apk
          path: |
            ${{ steps.detect.outputs.ROOT }}/${{ steps.detect.outputs.APP_MOD }}/build/outputs/apk/debug/*.apk
          if-no-files-found: warn
