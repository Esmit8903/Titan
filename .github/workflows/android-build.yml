name: Build Titan (Debug APK)

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # If your project is provided as a zip; harmless if the file isn't there
      - name: Unzip project (optional)
        run: unzip -q TitanApp_Rebuild.zip -d TitanApp || true

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK components
        run: sdkmanager "platforms;android-34" "build-tools;34.0.0"

      - name: Detect Android project dir
        id: detect
        shell: bash
        run: |
          set -e
          if [ -d TitanApp ]; then
            D="TitanApp"
          else
            D="$(find . -maxdepth 2 -type d -name app -printf '%h\n' | head -n1)"
            D="${D:-.}"
          fi
          D="${D#./}"
          echo "PROJECT_DIR=$D" >> "$GITHUB_OUTPUT"
          echo "Detected PROJECT_DIR=$D"

      - name: Make gradlew executable (if present)
        working-directory: ${{ steps.detect.outputs.PROJECT_DIR }}
        shell: bash
        run: |
          if [ -f ./gradlew ]; then chmod +x ./gradlew; fi

      - name: Pick Gradle (wrapper or 8.7)
        id: gradle
        shell: bash
        run: |
          set -e
          cd "${{ steps.detect.outputs.PROJECT_DIR }}"
          if [ -f ./gradlew ]; then
            echo "GRADLE_CMD=./gradlew" >> "$GITHUB_OUTPUT"
          else
            cd ~
            curl -L -o gradle.zip https://services.gradle.org/distributions/gradle-8.7-bin.zip
            unzip -q gradle.zip -d "$HOME/gradle"
            echo "$HOME/gradle/gradle-8.7/bin" >> "$GITHUB_PATH"
            echo "GRADLE_CMD=gradle" >> "$GITHUB_OUTPUT"
          fi

      # -----------------------------
      # SAFE writer for settings.gradle(.kts) using printf (no here-docs)
      # -----------------------------
      - name: Write settings.gradle(.kts) with repositories + include(":app")
        shell: bash
        run: |
          set -e
          ROOT="${{ steps.detect.outputs.PROJECT_DIR }}"
          FILE="$ROOT/settings.gradle.kts"
          # fallback to Groovy DSL if kts doesn't exist
          if [ ! -f "$FILE" ]; then
            FILE="$ROOT/settings.gradle"
          fi

          printf "%s\n" \
            'pluginManagement {' \
            '  repositories {' \
            '    gradlePluginPortal()' \
            '    google()' \
            '    mavenCentral()' \
            '  }' \
            '}' \
            'dependencyResolutionManagement {' \
            '  repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)' \
            '  repositories {' \
            '    google()' \
            '    mavenCentral()' \
            '  }' \
            '}' \
            'rootProject.name = "TitanApp"' \
            'include(":app")' \
            > "$FILE"

          echo "Wrote $FILE ($([ -f "$ROOT/settings.gradle.kts" ] && echo kts || echo groovy))"

      - name: Build Debug APK (verbose)
        shell: bash
        run: |
          set -e
          CMD="${{ steps.gradle.outputs.GRADLE_CMD }}"
          "$CMD" -p "${{ steps.detect.outputs.PROJECT_DIR }}" --no-daemon :app:assembleDebug --stacktrace --info

      - name: "Debug: print project structure on failure"
        if: failure()
        shell: bash
        run: |
          echo "== Gradle files found =="
          find "${{ steps.detect.outputs.PROJECT_DIR }}" -maxdepth 3 \( -name "build.gradle" -o -name "build.gradle.kts" \) -print
          echo "== App directory listing =="
          ls -la "${{ steps.detect.outputs.PROJECT_DIR }}/app" || true

      - name: Upload APK artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: titan-debug-apk
          path: |
            ${{ steps.detect.outputs.PROJECT_DIR }}/app/build/outputs/apk/debug/*.apk
            ${{ steps.detect.outputs.PROJECT_DIR }}/**/build/outputs/apk/debug/*.apk
          if-no-files-found: warn
