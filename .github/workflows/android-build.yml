name: Build Titan (Debug APK)

on:
  workflow_dispatch:
  push:
    paths:
      - 'TitanApp_Rebuild.zip'
      - '.github/workflows/android-build.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Unzip project
        run: unzip -q TitanApp_Rebuild.zip -d TitanApp

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK components
        run: sdkmanager "platforms;android-34" "build-tools;34.0.0"

      - name: Download Gradle 8.7
        run: |
          curl -L -o gradle.zip https://services.gradle.org/distributions/gradle-8.7-bin.zip
          unzip -q gradle.zip -d $HOME/gradle
          echo "$HOME/gradle/gradle-8.7/bin" >> $GITHUB_PATH

      # ðŸ‘‰ Inject Java 17 + Kotlin toolchain into the unzipped project
    
          - name: Patch Gradle for Java 17 (safe ASCII)
        run: 
          FILE="TitanApp/app/build.gradle"
          if [ -f "$FILE" ]; then
            # Strip any non-ASCII chars that may have slipped in
            LC_ALL=C tr -cd '\11\12\15\40-\176' < "$FILE" > "$FILE.clean" && mv "$FILE.clean" "$FILE"

            # Ensure compileOptions inside android { }
            if ! grep -q "compileOptions" "$FILE"; then
              awk '
                BEGIN{added=0}
                /composeOptions/ && added==0 {
                  print; 
                  print "    compileOptions {";
                  print "        sourceCompatibility JavaVersion.VERSION_17";
                  print "        targetCompatibility JavaVersion.VERSION_17";
                  print "    }";
                  added=1; next
                }
                {print}
              ' "$FILE" > tmp && mv tmp "$FILE"
            else
              # Normalize any smart quotes or weird chars on those lines
              sed -i "s/JavaVersion[^0-9]*VERSION_17/JavaVersion.VERSION_17/g" "$FILE"
            fi

            # Add Kotlin toolchain at top-level if missing
            if ! grep -q "jvmToolchain(17)" "$FILE"; then
              printf '\n// Injected by CI\nkotlin {\n  jvmToolchain(17)\n}\n' >> "$FILE"
            fi
          fi

          # Clean manifest package attribute (optional)
          MAN="TitanApp/app/src/main/AndroidManifest.xml"
          if [ -f "$MAN" ]; then
            sed -i 's/^\s*<manifest\s\+xmlns:android="http:\/\/schemas.android.com\/apk\/res\/android"\s\+package="[^"]*">/<manifest xmlns:android="http:\/\/schemas.android.com\/apk\/res\/android">/' "$MAN" || true
          fi

      - name: Build Debug APK
        run: |
          gradle -v
          gradle -p TitanApp --no-daemon assembleDebug

      - name: Build Debug APK
        run: |
          gradle -v
          gradle -p TitanApp assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: titan-debug-apk
          path: TitanApp/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 14
