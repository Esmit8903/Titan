name: Build Titan (Debug APK)

on:
  push:
    paths:
      - 'TitanApp_Rebuild.zip'
      - '.github/workflows/android-build.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Unzip project
        run: unzip -q TitanApp_Rebuild.zip -d TitanApp

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK components
        run: sdkmanager "platforms;android-34" "build-tools;34.0.0"

      - name: Make gradlew executable (if present)
        working-directory: TitanApp
        run: |
          if [ -f ./gradlew ]; then chmod +x ./gradlew; fi

      - name: Pick Gradle (wrapper or 8.7)
        id: gradle
        shell: bash
        run: |
          if [ -f TitanApp/gradlew ]; then
            echo "GRADLE_CMD=TitanApp/gradlew" >> "$GITHUB_OUTPUT"
          else
            curl -L -o gradle.zip https://services.gradle.org/distributions/gradle-8.7-bin.zip
            unzip -q gradle.zip -d "$HOME/gradle"
            echo "$HOME/gradle/gradle-8.7/bin" >> "$GITHUB_PATH"
            echo "GRADLE_CMD=gradle" >> "$GITHUB_OUTPUT"
          fi

      - name: Build Debug APK (verbose)
        shell: bash
        run: |
          set -e
          CMD="${{ steps.gradle.outputs.GRADLE_CMD }}"
          if [ "$CMD" = "gradle" ]; then
            gradle  -p TitanApp --no-daemon :app:assembleDebug --stacktrace --info
          else
            "$CMD" -p TitanApp --no-daemon :app:assembleDebug --stacktrace --info
          fi

      - name: Debug: print project structure on failure
        if: ${{ failure() }}
        shell: bash
        run: |
          echo "== Gradle files =="
          find TitanApp -maxdepth 3 \( -name "build.gradle" -o -name "build.gradle.kts" \)
          echo "== App directory listing =="
          ls -la TitanApp/app || true

      - name: Upload APK artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: titan-debug-apk
          path: |
            TitanApp/app/build/outputs/apk/debug/*.apk
            TitanApp/**/build/outputs/apk/debug/*.apk
          if-no-files-found: warn
